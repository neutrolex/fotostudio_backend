# Generated by Django 5.2.6 on 2025-09-13 13:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Título de la notificación', max_length=200)),
                ('message', models.TextField(help_text='Mensaje de la notificación')),
                ('notification_type', models.CharField(choices=[('info', 'Informativo'), ('success', 'Éxito'), ('warning', 'Advertencia'), ('error', 'Error'), ('alerta', 'Alerta')], default='info', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=10)),
                ('role', models.CharField(blank=True, help_text='Rol específico (null = todos los roles)', max_length=50, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_remove', models.BooleanField(default=True, help_text='Eliminar automáticamente después de ser leída')),
                ('duration', models.IntegerField(default=5000, help_text='Duración en milisegundos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Fecha de expiración', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Datos adicionales en formato JSON')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, help_text='Usuario específico (null = todos los usuarios)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'Notificación en App')], max_length=20)),
                ('status', models.CharField(choices=[('sent', 'Enviado'), ('delivered', 'Entregado'), ('read', 'Leído'), ('failed', 'Fallido'), ('bounced', 'Rebotado')], default='sent', max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification_logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('in_app_notifications', models.BooleanField(default=True)),
                ('stock_alerts', models.BooleanField(default=True)),
                ('appointment_reminders', models.BooleanField(default=True)),
                ('deadline_alerts', models.BooleanField(default=True)),
                ('payment_reminders', models.BooleanField(default=True)),
                ('system_notifications', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Inicio de horas silenciosas', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='Fin de horas silenciosas', null=True)),
                ('timezone', models.CharField(default='America/Lima', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre de la plantilla', max_length=100)),
                ('template_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'Notificación en App')], max_length=20)),
                ('subject', models.CharField(blank=True, help_text='Asunto (para email)', max_length=200, null=True)),
                ('content', models.TextField(help_text='Contenido de la plantilla')),
                ('variables', models.JSONField(blank=True, default=list, help_text='Lista de variables disponibles en la plantilla')),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False, help_text='Plantilla del sistema')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_templates', to='tenants.tenant')),
            ],
            options={
                'db_table': 'notification_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('stock_low', 'Stock Bajo'), ('stock_out', 'Stock Agotado'), ('appointment_reminder', 'Recordatorio de Cita'), ('deadline_approaching', 'Fecha Límite Próxima'), ('payment_due', 'Pago Pendiente'), ('system_maintenance', 'Mantenimiento del Sistema'), ('security_breach', 'Brecha de Seguridad'), ('backup_failed', 'Respaldo Fallido')], max_length=30)),
                ('severity', models.CharField(choices=[('info', 'Informativo'), ('warning', 'Advertencia'), ('error', 'Error'), ('critical', 'Crítico')], default='warning', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('related_model', models.CharField(blank=True, help_text="Modelo relacionado (ej: 'inventory', 'order')", max_length=50, null=True)),
                ('related_id', models.IntegerField(blank=True, help_text='ID del objeto relacionado', null=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('auto_resolve', models.BooleanField(default=False, help_text='Resolver automáticamente')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'alerts',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['alert_type', 'is_resolved'], name='alerts_alert_t_797b31_idx'), models.Index(fields=['severity', 'is_acknowledged'], name='alerts_severit_221219_idx'), models.Index(fields=['created_at'], name='alerts_created_965da5_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='notificatio_user_id_a4dd5c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['tenant', 'notification_type'], name='notificatio_tenant__3f1bf7_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['notification', 'status'], name='notificatio_notific_ff3adf_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['user', 'sent_at'], name='notificatio_user_id_97b8a9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationtemplate',
            unique_together={('tenant', 'name', 'template_type')},
        ),
    ]
