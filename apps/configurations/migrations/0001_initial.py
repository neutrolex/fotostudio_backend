# Generated by Django 5.2.6 on 2025-09-13 13:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(default='Arte Ideas Diseño Gráfico', max_length=200)),
                ('address', models.TextField(default='Av. Lima 123, San Juan de Lurigancho')),
                ('phone', models.CharField(default='987654321', max_length=20)),
                ('email', models.EmailField(default='info@arteideas.com', max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('tax_id', models.CharField(default='20123456789', help_text='RUC', max_length=20)),
                ('currency', models.CharField(choices=[('PEN', 'Soles (S/)'), ('USD', 'Dólares (USD)'), ('EUR', 'Euros (EUR)')], default='PEN', max_length=3)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('timezone', models.CharField(default='America/Lima', max_length=50)),
                ('language', models.CharField(choices=[('es', 'Español'), ('en', 'English')], default='es', max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_settings', to='tenants.tenant')),
            ],
            options={
                'db_table': 'business_settings',
            },
        ),
        migrations.CreateModel(
            name='DataBackup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('backup_type', models.CharField(choices=[('full', 'Respaldo Completo'), ('incremental', 'Respaldo Incremental'), ('differential', 'Respaldo Diferencial')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En Progreso'), ('completed', 'Completado'), ('failed', 'Fallido')], default='pending', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('file_size', models.BigIntegerField(default=0, help_text='Tamaño del archivo en bytes')),
                ('record_count', models.IntegerField(default=0, help_text='Número de registros respaldados')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_backups', to='tenants.tenant')),
            ],
            options={
                'db_table': 'data_backups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecuritySettings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('two_factor_auth', models.BooleanField(default=False, help_text='Autenticación de dos factores')),
                ('session_timeout', models.IntegerField(default=30, help_text='Timeout de sesión en minutos')),
                ('password_expiry', models.BooleanField(default=False, help_text='Expiración de contraseña')),
                ('password_expiry_days', models.IntegerField(default=90, help_text='Días para expiración de contraseña')),
                ('max_login_attempts', models.IntegerField(default=5, help_text='Máximo intentos de login')),
                ('lockout_duration', models.IntegerField(default=15, help_text='Duración del bloqueo en minutos')),
                ('min_password_length', models.IntegerField(default=8, help_text='Longitud mínima de contraseña')),
                ('require_uppercase', models.BooleanField(default=True, help_text='Requerir mayúsculas')),
                ('require_lowercase', models.BooleanField(default=True, help_text='Requerir minúsculas')),
                ('require_numbers', models.BooleanField(default=True, help_text='Requerir números')),
                ('require_special_chars', models.BooleanField(default=True, help_text='Requerir caracteres especiales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='security_settings', to='tenants.tenant')),
            ],
            options={
                'db_table': 'security_settings',
            },
        ),
        migrations.CreateModel(
            name='ServiceConfiguration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('service_name', models.CharField(choices=[('Impresión Digital', 'Impresión Digital'), ('Fotografía Escolar', 'Fotografía Escolar'), ('Promoción Escolar', 'Promoción Escolar'), ('Enmarcado', 'Enmarcado'), ('Retoque Fotográfico', 'Retoque Fotográfico'), ('Recordatorios', 'Recordatorios'), ('Ampliaciones', 'Ampliaciones'), ('Fotografía de Eventos', 'Fotografía de Eventos'), ('Sesión Familiar', 'Sesión Familiar')], max_length=100)),
                ('base_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo'), ('Mantenimiento', 'Mantenimiento')], default='Activo', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Duración estimada en días', null=True)),
                ('requires_approval', models.BooleanField(default=False, help_text='Requiere aprobación')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_configurations', to='tenants.tenant')),
            ],
            options={
                'db_table': 'service_configurations',
                'ordering': ['service_name'],
                'unique_together': {('tenant', 'service_name')},
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('config_type', models.CharField(choices=[('business', 'Configuración de Negocio'), ('security', 'Configuración de Seguridad'), ('system', 'Configuración del Sistema'), ('ui', 'Configuración de Interfaz')], max_length=20)),
                ('key', models.CharField(help_text='Clave de configuración', max_length=100)),
                ('value', models.JSONField(help_text='Valor de configuración (JSON)')),
                ('description', models.TextField(blank=True, help_text='Descripción de la configuración', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='tenants.tenant')),
            ],
            options={
                'db_table': 'system_configurations',
                'ordering': ['config_type', 'key'],
                'unique_together': {('tenant', 'config_type', 'key')},
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(choices=[('Administrador', 'Administrador'), ('Editor', 'Editor'), ('Usuario', 'Usuario'), ('Vendedor', 'Vendedor'), ('Fotógrafo', 'Fotógrafo'), ('Editor Gráfico', 'Editor Gráfico')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_manage_orders', models.BooleanField(default=False)),
                ('can_manage_inventory', models.BooleanField(default=False)),
                ('can_manage_production', models.BooleanField(default=False)),
                ('can_manage_reports', models.BooleanField(default=False)),
                ('can_manage_settings', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='tenants.tenant')),
            ],
            options={
                'db_table': 'user_roles',
                'ordering': ['role_name'],
                'unique_together': {('tenant', 'role_name')},
            },
        ),
    ]
